name: Deploy to Azure App Service

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Setup .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore

    # Build the project
    - name: Build the project
      run: dotnet build --configuration Release --no-restore

    # Publish the project
    - name: Publish the project
      run: dotnet publish -c Release -o ./publish --no-restore

    # Login to Azure
    - name: Login to Azure
      run: |
        az login --service-principal \
                 --username $(echo "${{ secrets.AZURE_CREDENTIALS }}" | jq -r '.clientId') \
                 --password $(echo "${{ secrets.AZURE_CREDENTIALS }}" | jq -r '.clientSecret') \
                 --tenant $(echo "${{ secrets.AZURE_CREDENTIALS }}" | jq -r '.tenantId')
        az account set --subscription $(echo "${{ secrets.AZURE_CREDENTIALS }}" | jq -r '.subscriptionId')

    # Create Azure Resource Group
    - name: Create Azure Resource Group
      run: |
        az group create --name ${{ vars.RESOURCE_GROUP_NAME }} \
                        --location ${{ vars.AZURE_LOCATION }}

    # Create Azure App Service
    - name: Create Azure App Service
      run: |
        az webapp up --name ${{ vars.APP_SERVICE_NAME }} \
                     --resource-group ${{ vars.RESOURCE_GROUP_NAME }} \
                     --plan ${{ vars.APP_SERVICE_PLAN_NAME }} \
                     --sku F1 \
                     --runtime "DOTNETCORE:9.0" \
                     --location ${{ vars.AZURE_LOCATION }} \
                     --os-type Linux

    # Deploy to Azure App Service
    - name: Deploy to Azure App Service
      run: |
        az webapp deploy --name ${{ vars.APP_SERVICE_NAME }} \
                         --resource-group ${{ vars.RESOURCE_GROUP_NAME }} \
                         --src-path ./publish